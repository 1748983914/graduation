<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liwei.graduation.mapper.DifficultInfoMapper" >
  <resultMap id="BaseResultMap" type="com.liwei.graduation.pojo.DifficultInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="joinparty" property="joinparty" jdbcType="TIMESTAMP" />
    <result column="depart" property="depart" jdbcType="VARCHAR" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="statusname" property="statusname" jdbcType="VARCHAR" />
    <result column="userid" property="userid" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, year, name, sex, birthday, joinparty, depart, income, introduction, statusname, 
    userid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.liwei.graduation.pojo.DifficultInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from difficult_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from difficult_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from difficult_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.liwei.graduation.pojo.DifficultInfoExample" >
    delete from difficult_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.liwei.graduation.pojo.DifficultInfo" >
    insert into difficult_info (id, year, name, 
      sex, birthday, joinparty, 
      depart, income, introduction, 
      statusname, userid)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{joinparty,jdbcType=TIMESTAMP}, 
      #{depart,jdbcType=VARCHAR}, #{income,jdbcType=DECIMAL}, #{introduction,jdbcType=VARCHAR}, 
      #{statusname,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.liwei.graduation.pojo.DifficultInfo" >
    insert into difficult_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="joinparty != null" >
        joinparty,
      </if>
      <if test="depart != null" >
        depart,
      </if>
      <if test="income != null" >
        income,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="statusname != null" >
        statusname,
      </if>
      <if test="userid != null" >
        userid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="joinparty != null" >
        #{joinparty,jdbcType=TIMESTAMP},
      </if>
      <if test="depart != null" >
        #{depart,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        #{income,jdbcType=DECIMAL},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="statusname != null" >
        #{statusname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.liwei.graduation.pojo.DifficultInfoExample" resultType="java.lang.Integer" >
    select count(*) from difficult_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update difficult_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.joinparty != null" >
        joinparty = #{record.joinparty,jdbcType=TIMESTAMP},
      </if>
      <if test="record.depart != null" >
        depart = #{record.depart,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=DECIMAL},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.statusname != null" >
        statusname = #{record.statusname,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update difficult_info
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      joinparty = #{record.joinparty,jdbcType=TIMESTAMP},
      depart = #{record.depart,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=DECIMAL},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      statusname = #{record.statusname,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.liwei.graduation.pojo.DifficultInfo" >
    update difficult_info
    <set >
      <if test="year != null" >
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="joinparty != null" >
        joinparty = #{joinparty,jdbcType=TIMESTAMP},
      </if>
      <if test="depart != null" >
        depart = #{depart,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="statusname != null" >
        statusname = #{statusname,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userid = #{userid,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liwei.graduation.pojo.DifficultInfo" >
    update difficult_info
    set year = #{year,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      joinparty = #{joinparty,jdbcType=TIMESTAMP},
      depart = #{depart,jdbcType=VARCHAR},
      income = #{income,jdbcType=DECIMAL},
      introduction = #{introduction,jdbcType=VARCHAR},
      statusname = #{statusname,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>